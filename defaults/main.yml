---

rabbitmq_update_hosts: false

dpkg_force_overwrite_configs: false

erlang_apt_repo_keyid: "434975BD900CCBE4F7EE1B1ED208507CA14F4FCA"
erlang_apt_repo_key: "https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc"
erlang_apt_repo_strings:
  - "deb https://packages.erlang-solutions.com/ubuntu {{ ansible_distribution_release }} contrib"

erlang_version: latest
erlang_packages:
  - "erlang-nox{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-asn1{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-base{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-crypto{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-diameter{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-edoc{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-eldap{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-erl-docgen{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-eunit{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-ftp{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - " erlang-ic{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-inets{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-inviso{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-mnesia{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-nox{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-odbc{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-os-mon{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-parsetools{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-percept{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-public-key{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-runtime-tools{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-snmp{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-ssh{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-ssl{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-syntax-tools{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-tftp{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-tools{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"
  - "erlang-xmerl{% if erlang_version | length > 0 and erlang_version != 'latest' %}={{ erlang_version }}*{% endif %}"

rabbitmq_apt_repo_keyid: "8C695B0219AFDEB04A058ED8F4E789204D206F89"
rabbitmq_apt_repo_key: "https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey"
rabbitmq_apt_keyring: "/etc/apt/keyrings/rabbitmq_rabbitmq-server-archive-keyring.gpg"
rabbitmq_apt_repo_strings:
   - "deb [signed-by={{ rabbitmq_apt_keyring }}] https://packagecloud.io/rabbitmq/rabbitmq-server/ubuntu {{ ansible_distribution_release }} main"
   - "deb-src [signed-by={{ rabbitmq_apt_keyring }}] https://packagecloud.io/rabbitmq/rabbitmq-server/ubuntu {{ ansible_distribution_release }} main"

rabbitmq_version: latest
rabbitmq_packages:
  - "rabbitmq-server{% if rabbitmq_version is defined and rabbitmq_version != '' and rabbitmq_version != 'latest' %}={{ rabbitmq_version }}*{% endif %}"

# cluster
rabbitmq_cluster_name: rabbitmq
rabbitmq_cluster: true
rabbitmq_cluster_ha_enabled: false
rabbitmq_cluster_ha_batch: 1000

# We just need one of installed hosts to be cluster join endpoint - will choose first node of "rabbitmq" inventory group
rabbitmq_hosts: 'rabbitmq'
rabbitmq_cluster_leader: "{{ hostvars[groups[rabbitmq_hosts][0]]['ansible_hostname'] }}"
rabbitmq_bind_address: "{{ ansible_host }}"
rabbitmq_ip: "{{ ansible_host }}"

# Erlang cookie is just a string of alphanumeric characters up to 255 chars
rabbitmq_erlang_cookie: 00000000000000000000
# https://www.rabbitmq.com/configure.html#define-environment-variables
# When set to true this will cause RabbitMQ to use fully qualified names to identify nodes.
# This may prove useful on EC2.
# Note that it is not possible to switch between using short and long names without resetting the node.
rabbitmq_use_longname: 'false'

# logging
rabbitmq_log_level: debug
rabbitmq_logrotate_period: weekly
rabbitmq_logrotate_amount: 8

# https://www.rabbitmq.com/install-debian.html
# The main setting that needs adjustment is the max number of open files, also known as ulimit -n.
# The default value on many operating systems is too low for a messaging broker (eg. 1024 on several Linux distributions).
# We recommend allowing for at least 65536 file descriptors for user rabbitmq in production environments.
# 4096 should be sufficient for most development workloads
rabbitmq_limit_files: 4096
rabbitmq_limit_sockets: 4096
rabbitmq_memlock_enabled: false

# default ports
rabbitmq_tls_port: 5671
rabbitmq_epmd_port: 4369
rabbitmq_node_port: 5672
rabbitmq_tls_mgmt_port: 15671
rabbitmq_tcp_mgmt_port: 15672

# plugins for HTTP API monitor
rabbitmq_plugins_new_only: true
rabbitmq_plugins:
  - rabbitmq_management
  - rabbitmq_management_agent
  - rabbitmq_shovel
  - rabbitmq_shovel_management

# TLS/SSL support
rabbitmq_enable_tls: false
# if true, only tls is supported which means amqp default port 5672 is not open anymore
rabbitmq_tls_only: false

rabbitmq_tls_verify: "verify_none"
rabbitmq_tls_fail_if_no_peer_cert: false

rabbitmq_cacertfile: ""
rabbitmq_cacertfile_dest: "/etc/rabbitmq/cacert.pem"

rabbitmq_certfile: ""
rabbitmq_certfile_dest: "/etc/rabbitmq/cert.pem"

rabbitmq_keyfile: ""
rabbitmq_keyfile_dest: "/etc/rabbitmq/key.pem"

# By default, queues within a RabbitMQ cluster are located on a single node (the node on which they were first declared).
# Queues can optionally be made mirrored across all nodes, or exactly N number of nodes
# By enabling this variable to true, there will be 1 queue master and 1 queue mirror.
# If the node running the queue master becomes unavailable, the queue mirror will be automatically promoted to master.
rabbitmq_policies: []

rabbitmq_users:
  - name: 'rabbitmqadmin'
    password: 'rabbitmqadmin'
    # Define comma separated list of tags to assign to user:
    # management,policymaker,monitoring,administrator
    # required for management plugin.
    # https://www.rabbitmq.com/management.html
    tags: 'administrator'
    vhost: '/'
    configure_priv: '.*'
    read_priv: '.*'
    write_priv: '.*'
